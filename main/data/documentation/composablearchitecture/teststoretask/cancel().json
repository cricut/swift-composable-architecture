{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/teststoretask\/cancel()"]}],"metadata":{"symbolKind":"method","title":"cancel()","roleHeading":"Instance Method","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cancel"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"async"}],"externalID":"s:22ComposableArchitecture13TestStoreTaskV6cancelyyYaF","modules":[{"name":"ComposableArchitecture"}]},"kind":"symbol","sections":[],"abstract":[{"text":"Cancels the underlying task and waits for it to finish.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreTask"]]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreTask\/cancel()","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancel"},{"kind":"text","text":"() "},{"text":"async","kind":"keyword"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"This can be handy when a feature needs to start a long-living effect when the feature appears,"},{"type":"text","text":" "},{"type":"text","text":"but cancellation of that effect is handled by the parent when the feature disappears. Such a"},{"type":"text","text":" "},{"text":"feature is difficult to exhaustively test in isolation because there is no action in its","type":"text"},{"type":"text","text":" "},{"type":"text","text":"domain that cancels the effect:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let store = TestStore(\/* ... *\/)","","let onAppearTask = await store.send(.onAppear)","\/\/ Assert what is happening in the feature","","await onAppearTask.cancel() \/\/ âœ… Cancel the task to simulate the feature disappearing."]}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","type":"topic","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","role":"collection","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStoreTask":{"abstract":[{"text":"The type returned from ","type":"text"},{"code":"TestStore\/send(_:assert:fileID:file:line:column:)-8f2pl","type":"codeVoice"},{"type":"text","text":" that represents the"},{"type":"text","text":" "},{"text":"lifecycle of the effect started from sending an action.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreTask","title":"TestStoreTask","url":"\/documentation\/composablearchitecture\/teststoretask","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestStoreTask","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TestStoreTask"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStoreTask/cancel()":{"title":"cancel()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cancel","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}],"abstract":[{"text":"Cancels the underlying task and waits for it to finish.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreTask\/cancel()","type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture\/teststoretask\/cancel()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"role":"symbol","title":"TestStore","navigatorTitle":[{"text":"TestStore","kind":"identifier"}],"abstract":[{"text":"A testable runtime for a reducer.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestStore"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","url":"\/documentation\/composablearchitecture\/teststore"}}}