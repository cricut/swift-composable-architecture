{"metadata":{"modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"roleHeading":"Instance Method","symbolKind":"method","platforms":[{"name":"macOS","unavailable":false,"beta":false,"introducedAt":"15.0","deprecated":false}],"extendedModule":"SwiftUICore","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"modifierKeyAlternate"},{"kind":"text","text":"<"},{"text":"V","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:7SwiftUI14EventModifiersV","text":"EventModifiers","kind":"typeIdentifier"},{"text":", () -> ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"title":"modifierKeyAlternate(_:_:)","role":"symbol","externalID":"s:7SwiftUI4ViewPAAE20modifierKeyAlternateyQrAA14EventModifiersV_qd__yXEtAaBRd__lF::SYNTHESIZED::s:22ComposableArchitecture11SwitchStoreV"},"kind":"symbol","sections":[],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/modifierKeyAlternate(_:_:)","interfaceLanguage":"swift"},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"View.modifierKeyAlternate(_:_:)","type":"codeVoice"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/switchstore\/modifierkeyalternate(_:_:)"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"modifierKeyAlternate","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"V"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"modifiers"},{"text":": ","kind":"text"},{"text":"EventModifiers","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI14EventModifiersV"},{"text":", ","kind":"text"},{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:7SwiftUI11ViewBuilderV","text":"ViewBuilder","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"alternate"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"V"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"text":"\n","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"title":"SwiftUI Integration","type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","type":"topic","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","role":"collection","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"url":"\/documentation\/composablearchitecture\/swiftuideprecations","title":"Deprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"deprecated":true,"url":"\/documentation\/composablearchitecture\/caselet","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CaseLet"}],"navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","isActive":true,"type":"reference"},{"text":".","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","kind":"symbol","role":"symbol","title":"CaseLet"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/modifierKeyAlternate(_:_:)":{"title":"modifierKeyAlternate(_:_:)","kind":"symbol","url":"\/documentation\/composablearchitecture\/switchstore\/modifierkeyalternate(_:_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/modifierKeyAlternate(_:_:)","abstract":[],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"modifierKeyAlternate","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"preciseIdentifier":"s:7SwiftUI14EventModifiersV","kind":"typeIdentifier","text":"EventModifiers"},{"text":", () -> ","kind":"text"},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"deprecated":true,"url":"\/documentation\/composablearchitecture\/switchstore","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SwitchStore"}],"navigatorTitle":[{"text":"SwitchStore","kind":"identifier"}],"abstract":[{"text":"A view that observes when enum state held in a store changes cases, and provides stores to","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","type":"reference"},{"text":" views.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","kind":"symbol","role":"symbol","title":"SwitchStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/View-Implementations":{"kind":"article","abstract":[],"type":"topic","title":"View Implementations","url":"\/documentation\/composablearchitecture\/switchstore\/view-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations","role":"collectionGroup"}}}