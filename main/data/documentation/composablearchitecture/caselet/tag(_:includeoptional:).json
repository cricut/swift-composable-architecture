{"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/tag(_:includeOptional:)","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/caselet\/tag(_:includeoptional:)"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"tag","kind":"identifier"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"tag","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"includeOptional","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":" = true) -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:SH","text":"Hashable","kind":"typeIdentifier"},{"kind":"text","text":"\n"}]}]}],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.tag(_:includeOptional:)"},{"text":".","type":"text"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"roleHeading":"Instance Method","symbolKind":"method","externalID":"s:7SwiftUI4ViewPAAE3tag_15includeOptionalQrqd___SbtSHRd__lF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV","platforms":[{"introducedAt":"13.0","name":"iOS","unavailable":false,"deprecated":false,"beta":false},{"deprecated":false,"introducedAt":"10.15","unavailable":false,"beta":false,"name":"macOS"},{"deprecated":false,"name":"tvOS","unavailable":false,"beta":false,"introducedAt":"13.0"},{"name":"watchOS","unavailable":false,"deprecated":false,"beta":false,"introducedAt":"6.0"}],"role":"symbol","title":"tag(_:includeOptional:)","modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"extendedModule":"SwiftUICore","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"tag"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"includeOptional"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","type":"topic","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","role":"collection","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"title":"SwiftUI Integration","type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"deprecated":true,"url":"\/documentation\/composablearchitecture\/caselet","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CaseLet"}],"navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","isActive":true,"type":"reference"},{"text":".","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","kind":"symbol","role":"symbol","title":"CaseLet"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","title":"View Implementations","type":"topic","kind":"article","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"url":"\/documentation\/composablearchitecture\/swiftuideprecations","title":"Deprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"deprecated":true,"url":"\/documentation\/composablearchitecture\/switchstore","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SwitchStore"}],"navigatorTitle":[{"text":"SwitchStore","kind":"identifier"}],"abstract":[{"text":"A view that observes when enum state held in a store changes cases, and provides stores to","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","type":"reference"},{"text":" views.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","kind":"symbol","role":"symbol","title":"SwitchStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/tag(_:includeOptional:)":{"role":"symbol","title":"tag(_:includeOptional:)","kind":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/tag(_:includeOptional:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"tag"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"includeOptional","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"url":"\/documentation\/composablearchitecture\/caselet\/tag(_:includeoptional:)"}}}