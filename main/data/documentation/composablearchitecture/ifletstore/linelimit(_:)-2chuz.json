{"sections":[],"metadata":{"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lineLimit","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","text":"ClosedRange"},{"kind":"text","text":"<"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"role":"symbol","symbolKind":"method","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"platforms":[{"unavailable":false,"introducedAt":"16.0","name":"iOS","beta":false,"deprecated":false},{"deprecated":false,"introducedAt":"13.0","name":"macOS","unavailable":false,"beta":false},{"beta":false,"unavailable":false,"introducedAt":"16.0","name":"tvOS","deprecated":false},{"introducedAt":"9.0","beta":false,"deprecated":false,"name":"watchOS","unavailable":false}],"title":"lineLimit(_:)","extendedModule":"SwiftUICore","externalID":"s:7SwiftUI4ViewPAAE9lineLimityQrSNySiGF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV"},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/lineLimit(_:)-2chuz"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"nonisolated"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lineLimit","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"limit","kind":"internalParam"},{"kind":"text","text":": "},{"text":"ClosedRange","kind":"typeIdentifier","preciseIdentifier":"s:SN"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":">) -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"kind":"text","text":"\n"}]}]}],"abstract":[{"type":"text","text":"Inherited from "},{"code":"View.lineLimit(_:)","type":"codeVoice"},{"text":".","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/linelimit(_:)-2chuz"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"title":"SwiftUI Integration","type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"url":"\/documentation\/composablearchitecture\/swiftuideprecations","title":"Deprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/lineLimit(_:)-2chuz":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lineLimit","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SN","text":"ClosedRange","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":">) -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"url":"\/documentation\/composablearchitecture\/ifletstore\/linelimit(_:)-2chuz","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/lineLimit(_:)-2chuz","kind":"symbol","role":"symbol","title":"lineLimit(_:)","type":"topic","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"title":"IfLetStore","abstract":[{"text":"A view that safely unwraps a store of optional state in order to show one of two views.","type":"text"}],"deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","url":"\/documentation\/composablearchitecture\/ifletstore","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"IfLetStore","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"role":"collectionGroup","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","title":"View Implementations","kind":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","type":"topic","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","role":"collection","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}]}}}