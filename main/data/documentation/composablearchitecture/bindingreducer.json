{"abstract":[{"type":"text","text":"A reducer that updates bindable state when it receives binding actions."}],"topicSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/init()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/init(action:)-33ljj","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/init(action:)-8fpg"],"title":"Initializers","anchor":"Initializers","generated":true},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/reduce(into:action:)"],"title":"Instance Methods","anchor":"Instance-Methods","generated":true},{"generated":true,"title":"Default Implementations","anchor":"Default-Implementations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/Reducer-Implementations"]}],"seeAlsoSections":[{"anchor":"Supporting-reducers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional"],"generated":true,"title":"Supporting reducers"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BindingReducer","kind":"identifier"},{"kind":"text","text":"<"},{"text":"State","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Action","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ViewAction","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":" == "},{"text":"ViewAction","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture14BindableActionP5StateQa","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/State","text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"BindableAction","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction","preciseIdentifier":"s:22ComposableArchitecture14BindableActionP"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"inlineContent":[{"text":"This reducer should typically be composed into the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-20w8t"},{"text":" of your","type":"text"},{"type":"text","text":" "},{"text":"feature’s reducer:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["@Reducer","struct Feature {","  struct State {","    @BindingState var isOn = false","    \/\/ More properties...","  }","  enum Action: BindableAction {","    case binding(BindingAction<State>)","    \/\/ More actions","  }","","  var body: some ReducerOf<Self> {","    BindingReducer()","    Reduce { state, action in","      \/\/ Your feature's logic...","    }","  }","}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"This makes it so that the binding’s logic is run before the feature’s logic, "},{"inlineContent":[{"text":"i.e.","type":"text"}],"type":"emphasis"},{"text":" you will","type":"text"},{"text":" ","type":"text"},{"text":"only see the state after the binding was written. If you want to react to the state ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"before","type":"text"}]},{"type":"text","text":" the"},{"type":"text","text":" "},{"type":"text","text":"binding was written, you can flip the order of the composition:"}],"type":"paragraph"},{"syntax":"swift","code":["var body: some ReducerOf<Self> {","  Reduce { state, action in","    \/\/ Your feature's logic...","  }","  BindingReducer()","}"],"type":"codeListing"},{"inlineContent":[{"text":"If you forget to compose the ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","isActive":true},{"type":"text","text":" into your feature’s reducer, then when a binding"},{"type":"text","text":" "},{"text":"is written to it will cause a runtime purple Xcode warning letting you know what needs to be","type":"text"},{"type":"text","text":" "},{"type":"text","text":"fixed."}],"type":"paragraph"}]}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"],"type":"conformsTo","title":"Conforms To"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/bindingreducer"]}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","interfaceLanguage":"swift"},"metadata":{"symbolKind":"struct","roleHeading":"Structure","role":"symbol","title":"BindingReducer","modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture14BindingReducerV","navigatorTitle":[{"kind":"identifier","text":"BindingReducer"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindingReducer"}]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction/State":{"kind":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"}],"abstract":[{"type":"text","text":"The root state type that contains bindable fields."}],"role":"symbol","type":"topic","required":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/State","title":"State","url":"\/documentation\/composablearchitecture\/bindableaction\/state"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer/reduce(into:action:)":{"url":"\/documentation\/composablearchitecture\/bindingreducer\/reduce(into:action:)","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"reduce","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture6EffectV","text":"Effect"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"reduce(into:action:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/reduce(into:action:)","role":"symbol","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction":{"title":"BindableAction","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"BindableAction","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"An action type that exposes a "},{"code":"binding","type":"codeVoice"},{"type":"text","text":" case that holds a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction"},{"type":"text","text":"."}],"url":"\/documentation\/composablearchitecture\/bindableaction","navigatorTitle":[{"text":"BindableAction","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer/init(action:)-33ljj":{"abstract":[],"title":"init(action:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/init(action:)-33ljj","url":"\/documentation\/composablearchitecture\/bindingreducer\/init(action:)-33ljj","role":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"action","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ViewAction"},{"text":">)","kind":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"abstract":[],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","role":"symbol","title":"Effect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/effect","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Effect"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EmptyReducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer","url":"\/documentation\/composablearchitecture\/emptyreducer","abstract":[{"type":"text","text":"A reducer that does nothing."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmptyReducer"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EmptyReducer"}],"type":"topic","title":"EmptyReducer","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/body-20w8t":{"type":"topic","title":"body","abstract":[{"type":"text","text":"The content and behavior of a reducer that is composed from other reducers."}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-20w8t","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP4BodyQa","kind":"typeIdentifier","text":"Body"}],"defaultImplementations":2,"required":true,"url":"\/documentation\/composablearchitecture\/reducer\/body-20w8t"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","type":"topic","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","role":"collection","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Swift/Optional":{"type":"topic","url":"\/documentation\/composablearchitecture\/swift\/optional","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Optional","preciseIdentifier":"s:Sq"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional","kind":"symbol","abstract":[],"role":"symbol","title":"Optional","navigatorTitle":[{"text":"Optional","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer/Reducer-Implementations":{"type":"topic","url":"\/documentation\/composablearchitecture\/bindingreducer\/reducer-implementations","title":"Reducer Implementations","kind":"article","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/Reducer-Implementations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer/init()":{"abstract":[{"type":"text","text":"Initializes a reducer that updates bindable state when it receives binding actions."}],"type":"topic","title":"init()","kind":"symbol","url":"\/documentation\/composablearchitecture\/bindingreducer\/init()","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/init()","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"()","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer":{"type":"topic","url":"\/documentation\/composablearchitecture\/bindingreducer","title":"BindingReducer","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingReducer","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A reducer that updates bindable state when it receives binding actions."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","role":"symbol","navigatorTitle":[{"text":"BindingReducer","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"title":"SwiftUI Integration","type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingAction":{"url":"\/documentation\/composablearchitecture\/bindingaction","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"BindingAction","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"An action that describes simple mutations to some root state at a writable key path."}],"title":"BindingAction","navigatorTitle":[{"text":"BindingAction","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer/init(action:)-8fpg":{"abstract":[],"title":"init(action:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"action"},{"text":": (","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"kind":"text","text":"?)"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/init(action:)-8fpg","type":"topic","url":"\/documentation\/composablearchitecture\/bindingreducer\/init(action:)-8fpg","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"kind":"symbol","title":"Reducer","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/reducer","navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"text":" ","type":"text"},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"text":"s should be executed later by the store, if any.","type":"text"}],"type":"topic"}}}