{"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"toCaseState"},{"text":": (","kind":"text"},{"text":"EnumState","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"CaseState"},{"text":"?","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"]]},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use 'switch' with a store of observable state, instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Replacing-SwitchStore-and-CaseLet-with-switch-and-case]"}],"type":"paragraph"}],"metadata":{"title":"toCaseState","externalID":"s:22ComposableArchitecture7CaseLetV02toC5Stateyq0_Sgxcvp","roleHeading":"Instance Property","platforms":[],"modules":[{"name":"ComposableArchitecture"}],"symbolKind":"property","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"toCaseState"},{"text":": (","kind":"text"},{"text":"EnumState","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"CaseState","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"role":"symbol"},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/toCaseState","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/caselet\/tocasestate"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/toCaseState":{"deprecated":true,"abstract":[],"kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/toCaseState","title":"toCaseState","url":"\/documentation\/composablearchitecture\/caselet\/tocasestate","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"toCaseState"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"EnumState"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"CaseState"},{"text":"?","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","type":"topic","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","role":"collection","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"deprecated":true,"url":"\/documentation\/composablearchitecture\/switchstore","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SwitchStore"}],"navigatorTitle":[{"text":"SwitchStore","kind":"identifier"}],"abstract":[{"text":"A view that observes when enum state held in a store changes cases, and provides stores to","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","type":"reference"},{"text":" views.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","kind":"symbol","role":"symbol","title":"SwitchStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"title":"SwiftUI Integration","type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"deprecated":true,"url":"\/documentation\/composablearchitecture\/caselet","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CaseLet"}],"navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","isActive":true,"type":"reference"},{"text":".","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","kind":"symbol","role":"symbol","title":"CaseLet"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"url":"\/documentation\/composablearchitecture\/swiftuideprecations","title":"Deprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article","type":"topic"}}}