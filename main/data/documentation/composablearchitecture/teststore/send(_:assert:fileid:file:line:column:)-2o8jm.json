{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"]]},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"attribute","text":"@"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"kind":"text","text":"<"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"assert"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"updateStateToExpectedResult"},{"text":": ((","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")? = nil, "},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":" = ","kind":"text"},{"text":"#fileID","kind":"keyword"},{"kind":"text","text":", "},{"text":"file","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"filePath"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"text":" = ","kind":"text"},{"kind":"keyword","text":"#filePath"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#line"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"kind":"text","text":" = "},{"text":"#column","kind":"keyword"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:22ComposableArchitecture13TestStoreTaskV","kind":"typeIdentifier","text":"TestStoreTask","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreTask"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"action","content":[{"inlineContent":[{"text":"A case key path to an action.","type":"text"}],"type":"paragraph"}]},{"name":"updateStateToExpectedResult","content":[{"type":"paragraph","inlineContent":[{"text":"A closure that asserts state changed by sending the action to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the store. The mutable state sent to this closure must be modified to match the state of"},{"type":"text","text":" "},{"text":"the store after processing the given action. Do not provide a closure if no change is","type":"text"},{"type":"text","text":" "},{"text":"expected.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The fileID."}]}],"name":"fileID"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The filePath.","type":"text"}]}],"name":"filePath"},{"content":[{"inlineContent":[{"type":"text","text":"The line."}],"type":"paragraph"}],"name":"line"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The column.","type":"text"}]}],"name":"column"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreTask","isActive":true,"type":"reference"},{"type":"text","text":" that represents the lifecycle of the effect executed when"},{"text":" ","type":"text"},{"type":"text","text":"sending the action."}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"This method is similar to ","type":"text"},{"type":"codeVoice","code":"send(_:assert:fileID:file:line:column:)-8f2pl"},{"text":", except it allows","type":"text"},{"type":"text","text":" "},{"type":"text","text":"you to specify a case key path to an action, which can be useful when testing the integration"},{"text":" ","type":"text"},{"type":"text","text":"of features and sending deeply nested actions. For example:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["await store.send(.destination(.presented(.child(.tap))))"]},{"inlineContent":[{"type":"text","text":"â€¦can be simplified to:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["await store.send(\\.destination.child.tap)"]}]}],"abstract":[{"type":"text","text":"Sends an action to the store and asserts when state changes."}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/send(_:assert:fileID:file:line:column:)-2o8jm"},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"roleHeading":"Instance Method","modules":[{"name":"ComposableArchitecture"}],"extendedModule":"ComposableArchitecture","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"send"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"assert"},{"kind":"text","text":": (("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")?, ","kind":"text"},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"text":"file","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"text":"TestStoreTask","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture13TestStoreTaskV"}],"role":"symbol","symbolKind":"method","externalID":"s:22ComposableArchitecture9TestStoreC4send_6assert6fileID0G04line6columnAA0cD4TaskVs7KeyPathCy9CasePaths0N0Vyq_GAPyytGG_yxzKcSgs12StaticStringVAVS2utYaF","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}]},"title":"send(_:assert:fileID:file:line:column:)"},"variants":[{"paths":["\/documentation\/composablearchitecture\/teststore\/send(_:assert:fileid:file:line:column:)-2o8jm"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/send(_:assert:fileID:file:line:column:)-2o8jm":{"abstract":[{"text":"Sends an action to the store and asserts when state changes.","type":"text"}],"type":"topic","kind":"symbol","title":"send(_:assert:fileID:file:line:column:)","conformance":{"constraints":[{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/send(_:assert:fileID:file:line:column:)-2o8jm","role":"symbol","url":"\/documentation\/composablearchitecture\/teststore\/send(_:assert:fileid:file:line:column:)-2o8jm","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"send"},{"text":"(","kind":"text"},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":">, ","kind":"text"},{"text":"assert","kind":"externalParam"},{"kind":"text","text":": (("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")?, ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:22ComposableArchitecture13TestStoreTaskV","text":"TestStoreTask","kind":"typeIdentifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","type":"topic","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","role":"collection","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"role":"symbol","title":"TestStore","navigatorTitle":[{"text":"TestStore","kind":"identifier"}],"abstract":[{"text":"A testable runtime for a reducer.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestStore"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","url":"\/documentation\/composablearchitecture\/teststore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStoreTask":{"abstract":[{"text":"The type returned from ","type":"text"},{"code":"TestStore\/send(_:assert:fileID:file:line:column:)-8f2pl","type":"codeVoice"},{"type":"text","text":" that represents the"},{"type":"text","text":" "},{"text":"lifecycle of the effect started from sending an action.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreTask","title":"TestStoreTask","url":"\/documentation\/composablearchitecture\/teststoretask","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestStoreTask","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TestStoreTask"}],"kind":"symbol"}}}