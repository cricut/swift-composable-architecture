{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"blendMode","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"blendMode"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"BlendMode","preciseIdentifier":"s:7SwiftUI9BlendModeO"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"},{"text":"\n","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"kind":"symbol","metadata":{"platforms":[{"name":"iOS","introducedAt":"13.0","deprecated":false,"unavailable":false,"beta":false},{"unavailable":false,"introducedAt":"10.15","beta":false,"deprecated":false,"name":"macOS"},{"beta":false,"deprecated":false,"name":"tvOS","introducedAt":"13.0","unavailable":false},{"deprecated":false,"introducedAt":"6.0","beta":false,"unavailable":false,"name":"watchOS"}],"role":"symbol","extendedModule":"SwiftUICore","externalID":"s:7SwiftUI4ViewPAAE9blendModeyQrAA05BlendE0OF::SYNTHESIZED::s:22ComposableArchitecture19NavigationLinkStoreV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"blendMode"},{"text":"(","kind":"text"},{"text":"BlendMode","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9BlendModeO"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"roleHeading":"Instance Method","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"title":"blendMode(_:)","symbolKind":"method"},"variants":[{"paths":["\/documentation\/composablearchitecture\/navigationlinkstore\/blendmode(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationLinkStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationLinkStore\/View-Implementations"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"View.blendMode(_:)","type":"codeVoice"},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationLinkStore\/blendMode(_:)","interfaceLanguage":"swift"},"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"url":"\/documentation\/composablearchitecture\/swiftuideprecations","title":"Deprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/NavigationLinkStore/blendMode(_:)":{"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationLinkStore\/blendMode(_:)","url":"\/documentation\/composablearchitecture\/navigationlinkstore\/blendmode(_:)","role":"symbol","kind":"symbol","title":"blendMode(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"blendMode"},{"kind":"text","text":"("},{"text":"BlendMode","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9BlendModeO"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/NavigationLinkStore/View-Implementations":{"kind":"article","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/navigationlinkstore\/view-implementations","type":"topic","title":"View Implementations","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationLinkStore\/View-Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"title":"SwiftUI Integration","type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/NavigationLinkStore":{"kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/navigationlinkstore","type":"topic","title":"NavigationLinkStore","abstract":[{"type":"text","text":"A view that controls a navigation presentation."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"NavigationLinkStore","kind":"identifier"}],"navigatorTitle":[{"text":"NavigationLinkStore","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationLinkStore","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","type":"topic","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","role":"collection","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}]}}}