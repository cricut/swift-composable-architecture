{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/store"]}],"topicSections":[{"title":"Creating a store","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/init(initialState:reducer:withDependencies:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreOf"],"anchor":"Creating-a-store"},{"title":"Accessing state","anchor":"Accessing-state","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-1qxwl","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/subscript(dynamicMember:)-655ef","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/withState(_:)"]},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:animation:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:transaction:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreTask"],"anchor":"Sending-actions","title":"Sending actions"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:fileID:filePath:line:column:)-3yvuf","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:fileID:filePath:line:column:)-2ym6k","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/case"],"title":"Scoping stores","anchor":"Scoping-stores"},{"title":"Combine integration","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StorePublisher"],"anchor":"Combine-integration"},{"title":"Deprecated interfaces","anchor":"Deprecated-interfaces","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreDeprecations"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/CustomDebugStringConvertible-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/Equatable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/Hashable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/Identifiable-Implementations"],"anchor":"Default-Implementations"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},"metadata":{"title":"Store","role":"symbol","symbolKind":"class","navigatorTitle":[{"text":"Store","kind":"identifier"}],"externalID":"s:22ComposableArchitecture5StoreC","roleHeading":"Class","modules":[{"name":"ComposableArchitecture"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}]},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"]]},"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/ComposableArchitecture\/11Observation10ObservableP","doc:\/\/ComposableArchitecture\/14PerceptionCore11PerceptibleP","doc:\/\/ComposableArchitecture\/s8CopyableP","doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP","doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/SH","doc:\/\/ComposableArchitecture\/s12IdentifiableP","doc:\/\/ComposableArchitecture\/s8SendableP"],"type":"conformsTo"}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:ScM","kind":"attribute","text":"MainActor"},{"kind":"text","text":" "},{"text":"@dynamicMemberLookup","kind":"attribute"},{"text":" ","kind":"text"},{"text":"@preconcurrency","kind":"attribute"},{"kind":"text","text":" "},{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"},{"text":"<","kind":"text"},{"text":"State","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Action"},{"kind":"text","text":">"}],"platforms":["macOS"]}]},{"content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"You will typically construct a single one of these at the root of your application:"}]},{"syntax":"swift","type":"codeListing","code":["@main","struct MyApp: App {","  var body: some Scene {","    WindowGroup {","      RootView(","        store: Store(initialState: AppFeature.State()) {","          AppFeature()","        }","      )","    }","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"…and then use the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255"},{"type":"text","text":" method to derive more focused stores that can be"},{"type":"text","text":" "},{"text":"passed to subviews.","type":"text"}]},{"text":"Scoping","anchor":"Scoping","level":3,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The most important operation defined on "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true},{"type":"text","text":" is the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","isActive":true},{"text":" method,","type":"text"},{"type":"text","text":" "},{"text":"which allows you to transform a store into one that deals with child state and actions. This is","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"necessary for passing stores to subviews that only care about a small portion of the entire"},{"text":" ","type":"text"},{"text":"application’s domain.","type":"text"}]},{"inlineContent":[{"text":"For example, if an application has a tab view at its root with tabs for activity, search, and","type":"text"},{"text":" ","type":"text"},{"text":"profile, then we can model the domain like this:","type":"text"}],"type":"paragraph"},{"code":["@Reducer","struct AppFeature {","  struct State {","    var activity: Activity.State","    var profile: Profile.State","    var search: Search.State","  }","","  enum Action {","    case activity(Activity.Action)","    case profile(Profile.Action)","    case search(Search.Action)","  }","","  \/\/ ...","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"We can construct a view for each of these domains by applying "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","isActive":true,"type":"reference"},{"type":"text","text":" to"},{"text":" ","type":"text"},{"type":"text","text":"a store that holds onto the full app domain in order to transform it into a store for each"},{"text":" ","type":"text"},{"type":"text","text":"subdomain:"}],"type":"paragraph"},{"type":"codeListing","code":["struct AppView: View {","  let store: StoreOf<AppFeature>","","  var body: some View {","    TabView {","      ActivityView(","        store: store.scope(state: \\.activity, action: \\.activity)","      )","      .tabItem { Text(\"Activity\") }","","      SearchView(","        store: store.scope(state: \\.search, action: \\.search)","      )","      .tabItem { Text(\"Search\") }","","      ProfileView(","        store: store.scope(state: \\.profile, action: \\.profile)","      )","      .tabItem { Text(\"Profile\") }","    }","  }","}"],"syntax":"swift"},{"text":"Thread safety","anchor":"Thread-safety","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Store"},{"type":"text","text":" class is not thread-safe, and so all interactions with an instance of "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true},{"type":"text","text":" "},{"text":"(including all of its child stores) must be done on the same thread the store was created on.","type":"text"},{"text":" ","type":"text"},{"text":"Further, if the store is powering a SwiftUI or UIKit view, as is customary, then all","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"interactions must be done on the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"main"}]},{"type":"text","text":" thread."}]},{"type":"paragraph","inlineContent":[{"text":"The reason stores are not thread-safe is due to the fact that when an action is sent to a store,","type":"text"},{"type":"text","text":" "},{"text":"a reducer is run on the current state, and this process cannot be done from multiple threads.","type":"text"},{"type":"text","text":" "},{"text":"It is possible to make this process thread-safe by introducing locks or queues, but this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"introduces new complications:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"If done simply with ","type":"text"},{"type":"codeVoice","code":"DispatchQueue.main.async"},{"text":" you will incur a thread hop even when you are","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"already on the main thread. This can lead to unexpected behavior in UIKit and SwiftUI, where"},{"type":"text","text":" "},{"text":"sometimes you are required to do work synchronously, such as in animation blocks.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"It is possible to create a scheduler that performs its work immediately when on the main"},{"text":" ","type":"text"},{"type":"text","text":"thread and otherwise uses "},{"code":"DispatchQueue.main.async","type":"codeVoice"},{"text":" (","type":"text"},{"inlineContent":[{"type":"text","text":"e.g."}],"type":"emphasis"},{"type":"text","text":", see Combine Schedulers’"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/pointfreeco\/combine-schedulers\/blob\/main\/Sources\/CombineSchedulers\/UIScheduler.swift"},{"text":").","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"This introduces a lot more complexity, and should probably not be adopted without having a very","type":"text"},{"text":" ","type":"text"},{"text":"good reason.","type":"text"}]},{"inlineContent":[{"text":"This is why we require all actions be sent from the same thread. This requirement is in the same","type":"text"},{"text":" ","type":"text"},{"text":"spirit of how ","type":"text"},{"code":"URLSession","type":"codeVoice"},{"type":"text","text":" and other Apple APIs are designed. Those APIs tend to deliver their"},{"text":" ","type":"text"},{"text":"outputs on whatever thread is most convenient for them, and then it is your responsibility to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"dispatch back to the main queue if that’s what you need. The Composable Architecture makes you"},{"type":"text","text":" "},{"type":"text","text":"responsible for making sure to send actions on the main thread. If you are using an effect that"},{"text":" ","type":"text"},{"type":"text","text":"may deliver its output on a non-main thread, you must explicitly perform "},{"code":".receive(on:)","type":"codeVoice"},{"text":" in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"order to force it back on the main thread."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This approach makes the fewest number of assumptions about how effects are created and"},{"text":" ","type":"text"},{"text":"transformed, and prevents unnecessary thread hops and re-dispatching. It also provides some","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"testing benefits. If your effects are not responsible for their own scheduling, then in tests"},{"text":" ","type":"text"},{"text":"all of the effects would run synchronously and immediately. You would not be able to test how","type":"text"},{"type":"text","text":" "},{"type":"text","text":"multiple in-flight effects interleave with each other and affect the state of your application."},{"type":"text","text":" "},{"type":"text","text":"However, by leaving scheduling out of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"text":" we get to test these aspects of our effects","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"if we so desire, or we can ignore if we prefer. We have that flexibility."}]},{"type":"heading","level":4,"text":"Thread safety checks","anchor":"Thread-safety-checks"},{"inlineContent":[{"text":"The store performs some basic thread safety checks in order to help catch mistakes. Stores","type":"text"},{"type":"text","text":" "},{"text":"constructed via the initializer ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/init(initialState:reducer:withDependencies:)","isActive":true},{"type":"text","text":" are assumed"},{"type":"text","text":" "},{"type":"text","text":"to run only on the main thread, and so a check is executed immediately to make sure that is the"},{"type":"text","text":" "},{"type":"text","text":"case. Further, all actions sent to the store and all scopes (see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255"},{"text":")","type":"text"},{"text":" ","type":"text"},{"text":"of the store are also checked to make sure that work is performed on the main thread.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"sections":[],"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"],"anchor":"State-management","title":"State management"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/withState(_:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/withState(_:)","type":"topic","title":"withState(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"withState"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"R"},{"text":") -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Calls the given closure with a snapshot of the current state of the store."}],"url":"\/documentation\/composablearchitecture\/store\/withstate(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState":{"url":"\/documentation\/composablearchitecture\/observablestate","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObservableState"}],"abstract":[],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ObservableState"}],"title":"ObservableState","kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/send(_:transaction:)":{"url":"\/documentation\/composablearchitecture\/store\/send(_:transaction:)","kind":"symbol","type":"topic","abstract":[{"text":"Sends an action to the store with a given transaction.","type":"text"}],"title":"send(_:transaction:)","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:transaction:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"send","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"transaction"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI11TransactionV","kind":"typeIdentifier","text":"Transaction"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"StoreTask","preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/CustomDebugStringConvertible-Implementations":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/CustomDebugStringConvertible-Implementations","url":"\/documentation\/composablearchitecture\/store\/customdebugstringconvertible-implementations","kind":"article","role":"collectionGroup","title":"CustomDebugStringConvertible Implementations","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/Identifiable-Implementations":{"kind":"article","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/Identifiable-Implementations","type":"topic","url":"\/documentation\/composablearchitecture\/store\/identifiable-implementations","title":"Identifiable Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/Equatable-Implementations":{"abstract":[],"title":"Equatable Implementations","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/Equatable-Implementations","url":"\/documentation\/composablearchitecture\/store\/equatable-implementations","type":"topic","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StoreDeprecations":{"kind":"article","role":"collectionGroup","abstract":[{"type":"text","text":"Review unsupported store APIs and their replacements."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreDeprecations","type":"topic","url":"\/documentation\/composablearchitecture\/storedeprecations","title":"Deprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"abstract":[{"text":"Learn techniques for sharing state throughout many parts of your application, and how to persist","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"data to user defaults, the file system, and other external mediums."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","kind":"article","url":"\/documentation\/composablearchitecture\/sharingstate","type":"topic","title":"Sharing state","role":"article"},"doc://ComposableArchitecture/SQ":{"identifier":"doc:\/\/ComposableArchitecture\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://ComposableArchitecture/s8CopyableP":{"identifier":"doc:\/\/ComposableArchitecture\/s8CopyableP","title":"Swift.Copyable","type":"unresolvable"},"doc://ComposableArchitecture/SH":{"identifier":"doc:\/\/ComposableArchitecture\/SH","title":"Swift.Hashable","type":"unresolvable"},"https://github.com/pointfreeco/combine-schedulers/blob/main/Sources/CombineSchedulers/UIScheduler.swift":{"url":"https:\/\/github.com\/pointfreeco\/combine-schedulers\/blob\/main\/Sources\/CombineSchedulers\/UIScheduler.swift","type":"link","titleInlineContent":[{"text":"UIScheduler","type":"text"}],"identifier":"https:\/\/github.com\/pointfreeco\/combine-schedulers\/blob\/main\/Sources\/CombineSchedulers\/UIScheduler.swift","title":"UIScheduler"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/init(initialState:reducer:withDependencies:)":{"type":"topic","url":"\/documentation\/composablearchitecture\/store\/init(initialstate:reducer:withdependencies:)","fragments":[{"text":"convenience","kind":"keyword"},{"kind":"text","text":" "},{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"externalParam","text":"initialState"},{"kind":"text","text":": "},{"kind":"attribute","text":"@autoclosure "},{"text":"() -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"reducer","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"withDependencies"},{"text":": ((","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")?)","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/init(initialState:reducer:withDependencies:)","abstract":[{"type":"text","text":"Initializes a store from an initial state and a reducer."}],"role":"symbol","title":"init(initialState:reducer:withDependencies:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:action:)-90255":{"type":"topic","title":"scope(state:action:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"scope"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ChildState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ChildAction"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"state"},{"text":": ","kind":"text"},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChildState","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildAction"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"text":"<","kind":"text"},{"text":"ChildState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildAction"},{"kind":"text","text":">"}],"abstract":[{"text":"Scopes the store to one that exposes child state and actions.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","url":"\/documentation\/composablearchitecture\/store\/scope(state:action:)-90255"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/Hashable-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/Hashable-Implementations","type":"topic","title":"Hashable Implementations","url":"\/documentation\/composablearchitecture\/store\/hashable-implementations","abstract":[],"kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/subscript(dynamicMember:)-655ef":{"url":"\/documentation\/composablearchitecture\/store\/subscript(dynamicmember:)-655ef","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/subscript(dynamicMember:)-655ef","kind":"symbol","title":"subscript(dynamicMember:)","fragments":[{"text":"subscript","kind":"keyword"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"text":"dynamicMember","kind":"externalParam"},{"kind":"text","text":" _: "},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">) -> "},{"text":"Value","kind":"typeIdentifier"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"State","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ObservableState"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","type":"topic"},"doc://ComposableArchitecture/s8SendableP":{"identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StoreOf":{"abstract":[{"type":"text","text":"A convenience type alias for referring to a store of a given reducer’s domain."}],"title":"StoreOf","type":"topic","navigatorTitle":[{"text":"StoreOf","kind":"identifier"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StoreOf"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreOf","role":"symbol","url":"\/documentation\/composablearchitecture\/storeof"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"type":"topic","url":"\/documentation\/composablearchitecture\/store","title":"Store","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","role":"symbol","navigatorTitle":[{"text":"Store","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/state-1qxwl":{"url":"\/documentation\/composablearchitecture\/store\/state-1qxwl","type":"topic","abstract":[{"type":"text","text":"Direct access to state in the store when "},{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState","type":"reference","isActive":true},{"type":"text","text":"."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"state","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"State"}],"title":"state","kind":"symbol","conformance":{"constraints":[{"code":"State","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ObservableState"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-1qxwl"},"doc://ComposableArchitecture/s12IdentifiableP":{"identifier":"doc:\/\/ComposableArchitecture\/s12IdentifiableP","title":"Swift.Identifiable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"kind":"symbol","title":"Reducer","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/reducer","navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"text":" ","type":"text"},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"text":"s should be executed later by the store, if any.","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/s28CustomDebugStringConvertibleP":{"identifier":"doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP","title":"Swift.CustomDebugStringConvertible","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"abstract":[],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","role":"symbol","title":"Effect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/effect","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Effect"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:action:fileID:filePath:line:column:)-3yvuf":{"conformance":{"constraints":[{"type":"codeVoice","code":"State"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ObservableState"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","url":"\/documentation\/composablearchitecture\/store\/scope(state:action:fileid:filepath:line:column:)-3yvuf","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:fileID:filePath:line:column:)-3yvuf","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"scope"},{"text":"<","kind":"text"},{"text":"ChildState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChildState","kind":"typeIdentifier"},{"text":"?>, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ChildAction","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"filePath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"text":"<","kind":"text"},{"text":"ChildState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildAction"},{"text":">?","kind":"text"}],"title":"scope(state:action:fileID:filePath:line:column:)","abstract":[{"type":"text","text":"Scopes the store to optional child state and actions."}]},"doc://ComposableArchitecture/11Observation10ObservableP":{"identifier":"doc:\/\/ComposableArchitecture\/11Observation10ObservableP","title":"Observation.Observable","type":"unresolvable"},"doc://ComposableArchitecture/14PerceptionCore11PerceptibleP":{"identifier":"doc:\/\/ComposableArchitecture\/14PerceptionCore11PerceptibleP","title":"PerceptionCore.Perceptible","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","type":"topic","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","role":"collection","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:action:fileID:filePath:line:column:)-2ym6k":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:fileID:filePath:line:column:)-2ym6k","conformance":{"constraints":[{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"code":"ObservableState","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"text":"Scopes the store of an identified collection to a collection of stores.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scope","kind":"identifier"},{"kind":"text","text":"<"},{"text":"ElementID","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ElementState"},{"text":", ","kind":"text"},{"text":"ElementAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"state"},{"text":": ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV","text":"IdentifiedArray","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"ElementID","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ElementState"},{"kind":"text","text":">>, "},{"text":"action","kind":"externalParam"},{"kind":"text","text":": "},{"text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"text":"IdentifiedAction","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture16IdentifiedActionO"},{"text":"<","kind":"text"},{"text":"ElementID","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ElementAction","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"filePath","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Sk","text":"RandomAccessCollection","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"ElementState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ElementAction","kind":"typeIdentifier"},{"text":">>\n","kind":"text"}],"role":"symbol","title":"scope(state:action:fileID:filePath:line:column:)","url":"\/documentation\/composablearchitecture\/store\/scope(state:action:fileid:filepath:line:column:)-2ym6k","type":"topic","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/case":{"kind":"symbol","abstract":[{"type":"text","text":"A destructurable view of a store on a collection of cases."}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"CaseReducerState"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Action"},{"text":" is ","type":"text"},{"code":"State.StateReducer.Action","type":"codeVoice"},{"text":".","type":"text"}]},"title":"case","type":"topic","url":"\/documentation\/composablearchitecture\/store\/case","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"`case`","kind":"identifier"},{"text":": ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture16CaseReducerStateP0eD0Qa","text":"StateReducer","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"CaseScope","preciseIdentifier":"s:22ComposableArchitecture11CaseReducerP0C5ScopeQa","kind":"typeIdentifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/case","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StorePublisher":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StorePublisher","navigatorTitle":[{"kind":"identifier","text":"StorePublisher"}],"role":"symbol","title":"StorePublisher","abstract":[{"type":"text","text":"A publisher of store state."}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"StorePublisher","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/storepublisher"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/send(_:)":{"url":"\/documentation\/composablearchitecture\/store\/send(_:)","type":"topic","kind":"symbol","title":"send(_:)","abstract":[{"text":"Sends an action to the store.","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"send","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV","kind":"typeIdentifier","text":"StoreTask"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StoreTask":{"abstract":[{"text":"The type returned from ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:)","type":"reference"},{"text":" that represents the lifecycle of the effect","type":"text"},{"type":"text","text":" "},{"text":"started from sending an action.","type":"text"}],"type":"topic","role":"symbol","title":"StoreTask","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"StoreTask","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreTask","navigatorTitle":[{"text":"StoreTask","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/storetask"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/send(_:animation:)":{"abstract":[{"type":"text","text":"Sends an action to the store with a given animation."}],"type":"topic","role":"symbol","title":"send(_:animation:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"send","kind":"identifier"},{"kind":"text","text":"("},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"animation"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Animation","preciseIdentifier":"s:7SwiftUI9AnimationV"},{"text":"?) -> ","kind":"text"},{"text":"StoreTask","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:animation:)","url":"\/documentation\/composablearchitecture\/store\/send(_:animation:)"}}}