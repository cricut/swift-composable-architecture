{"kind":"symbol","variants":[{"paths":["\/documentation\/composablearchitecture\/teststore\/receive(_:timeout:assert:fileid:file:line:column:)-8xb5v"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"]]},"abstract":[{"text":"Asserts an action was received from an effect that matches a predicate, and asserts how the","type":"text"},{"text":" ","type":"text"},{"text":"state changes.","type":"text"}],"metadata":{"title":"receive(_:timeout:assert:fileID:file:line:column:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"State","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"receive","kind":"identifier"},{"text":"((","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":", "},{"text":"timeout","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:s8DurationV"},{"text":", ","kind":"text"},{"text":"assert","kind":"externalParam"},{"text":": ((","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")?, ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"extendedModule":"ComposableArchitecture","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","platforms":[{"unavailable":false,"introducedAt":"16.0","beta":false,"name":"iOS","deprecated":false},{"introducedAt":"13.0","deprecated":false,"beta":false,"unavailable":false,"name":"macOS"},{"unavailable":false,"introducedAt":"16.0","name":"tvOS","deprecated":false,"beta":false},{"introducedAt":"9.0","unavailable":false,"name":"watchOS","deprecated":false,"beta":false}],"modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture9TestStoreC7receive_7timeout6assert6fileID0H04line6columnySbq_XE_s8DurationVyxzKcSgs12StaticStringVAOS2utYaF"},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/receive(_:timeout:assert:fileID:file:line:column:)-8xb5v"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"text":"MainActor","preciseIdentifier":"s:ScM","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"receive","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"isMatching"},{"text":": (","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"timeout","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"duration","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:s8DurationV"},{"text":", ","kind":"text"},{"text":"assert","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"updateStateToExpectedResult","kind":"internalParam"},{"text":": ((","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"State"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")? = nil, "},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":" = "},{"text":"#fileID","kind":"keyword"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"filePath"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"kind":"keyword","text":"#filePath"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":" = ","kind":"text"},{"text":"#line","kind":"keyword"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#column"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that attempts to match an action. If it returns "},{"code":"false","type":"codeVoice"},{"type":"text","text":", a test"},{"text":" ","type":"text"},{"text":"failure is reported.","type":"text"}]}],"name":"isMatching"},{"name":"duration","content":[{"type":"paragraph","inlineContent":[{"text":"The amount of time to wait for the expected action.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure that asserts state changed by sending the action","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the store. The mutable state sent to this closure must be modified to match the state"},{"type":"text","text":" "},{"text":"of the store after processing the given action. Do not provide a closure if no change is","type":"text"},{"type":"text","text":" "},{"text":"expected.","type":"text"}]}],"name":"updateStateToExpectedResult"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The fileID.","type":"text"}]}],"name":"fileID"},{"name":"filePath","content":[{"inlineContent":[{"type":"text","text":"The filePath."}],"type":"paragraph"}]},{"name":"line","content":[{"type":"paragraph","inlineContent":[{"text":"The line.","type":"text"}]}]},{"name":"column","content":[{"inlineContent":[{"text":"The column.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"This method is similar to ","type":"text"},{"code":"receive(_:timeout:assert:fileID:file:line:column:)-8zqxk","type":"codeVoice"},{"text":", except","type":"text"},{"type":"text","text":" "},{"text":"it allows you to assert that an action was received that matches a predicate instead of a case","type":"text"},{"type":"text","text":" "},{"text":"key path:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["await store.send(.buttonTapped)","await store.receive {","  guard case .response(.success) = $0 else { return false }","  return true","} assert: {","  store.count = 42","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When the storeâ€™s "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/exhaustivity"},{"type":"text","text":" is set to anything other than "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Exhaustivity\/off","isActive":true,"type":"reference"},{"type":"text","text":", a grey"},{"text":" ","type":"text"},{"text":"information box will show next to the ","type":"text"},{"type":"codeVoice","code":"store.receive"},{"text":" line in Xcode letting you know what data","type":"text"},{"type":"text","text":" "},{"text":"was in the effect that you chose not to assert on.","type":"text"}]},{"inlineContent":[{"text":"If you only want to check that a particular action case was received, then you might find the","type":"text"},{"type":"text","text":" "},{"code":"receive(_:timeout:assert:fileID:file:line:column:)-53wic","type":"codeVoice"},{"type":"text","text":" overload of this method more"},{"text":" ","type":"text"},{"text":"useful.","type":"text"}],"type":"paragraph"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/receive(_:timeout:assert:fileID:file:line:column:)-8xb5v":{"type":"topic","conformance":{"constraints":[{"code":"State","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/composablearchitecture\/teststore\/receive(_:timeout:assert:fileid:file:line:column:)-8xb5v","kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/receive(_:timeout:assert:fileID:file:line:column:)-8xb5v","abstract":[{"type":"text","text":"Asserts an action was received from an effect that matches a predicate, and asserts how the"},{"type":"text","text":" "},{"type":"text","text":"state changes."}],"title":"receive(_:timeout:assert:fileID:file:line:column:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"receive"},{"text":"((","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"timeout","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:s8DurationV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"assert"},{"kind":"text","text":": (("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Exhaustivity/off":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Exhaustivity\/off","url":"\/documentation\/composablearchitecture\/exhaustivity\/off","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"off","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Exhaustivity","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture12ExhaustivityO"}],"title":"off","role":"symbol","kind":"symbol","abstract":[{"text":"Non-exhaustive assertions.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/exhaustivity":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"exhaustivity","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture12ExhaustivityO","text":"Exhaustivity","kind":"typeIdentifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/exhaustivity","url":"\/documentation\/composablearchitecture\/teststore\/exhaustivity","abstract":[{"text":"The current exhaustivity level of the test store.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","title":"exhaustivity"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"role":"symbol","title":"TestStore","navigatorTitle":[{"text":"TestStore","kind":"identifier"}],"abstract":[{"text":"A testable runtime for a reducer.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestStore"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","url":"\/documentation\/composablearchitecture\/teststore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","type":"topic","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","role":"collection","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}]}}}