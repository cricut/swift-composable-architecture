{"sections":[],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/chartYScale(range:type:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"chartYScale"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Range"},{"kind":"text","text":">("},{"kind":"externalParam","text":"range"},{"text":": ","kind":"text"},{"text":"Range","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"type","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ScaleType","preciseIdentifier":"s:6Charts9ScaleTypeV","kind":"typeIdentifier"},{"text":"? = nil) -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Range"},{"text":" : ","kind":"text"},{"text":"PositionScaleRange","kind":"typeIdentifier","preciseIdentifier":"s:6Charts18PositionScaleRangeP"},{"kind":"text","text":"\n"}],"platforms":["macOS"],"languages":["swift"]}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"metadata":{"extendedModule":"SwiftUICore","role":"symbol","platforms":[{"deprecated":false,"name":"iOS","beta":false,"introducedAt":"16.0","unavailable":false},{"name":"macOS","introducedAt":"13.0","deprecated":false,"beta":false,"unavailable":false},{"beta":false,"introducedAt":"16.0","unavailable":false,"name":"tvOS","deprecated":false},{"introducedAt":"9.0","name":"watchOS","deprecated":false,"unavailable":false,"beta":false}],"modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"externalID":"s:7SwiftUI4ViewP6ChartsE11chartYScale5range4typeQrqd___AD9ScaleTypeVSgtAD08PositionI5RangeRd__lF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","symbolKind":"method","title":"chartYScale(range:type:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"chartYScale","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Range"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"range"},{"kind":"text","text":": "},{"text":"Range","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"type"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6Charts9ScaleTypeV","text":"ScaleType","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"roleHeading":"Instance Method"},"abstract":[{"type":"text","text":"Inherited from "},{"code":"View.chartYScale(range:type:)","type":"codeVoice"},{"type":"text","text":"."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/chartyscale(range:type:)"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"role":"collectionGroup","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","title":"View Implementations","kind":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"title":"SwiftUI Integration","type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"url":"\/documentation\/composablearchitecture\/swiftuideprecations","title":"Deprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","kind":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"title":"IfLetStore","abstract":[{"text":"A view that safely unwraps a store of optional state in order to show one of two views.","type":"text"}],"deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","url":"\/documentation\/composablearchitecture\/ifletstore","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"IfLetStore","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/chartYScale(range:type:)":{"role":"symbol","kind":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore\/chartyscale(range:type:)","title":"chartYScale(range:type:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/chartYScale(range:type:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"chartYScale"},{"text":"<","kind":"text"},{"text":"Range","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"range","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Range","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"type","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ScaleType","kind":"typeIdentifier","preciseIdentifier":"s:6Charts9ScaleTypeV"},{"text":"?) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"type":"topic","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"kind":"symbol","type":"topic","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","role":"collection","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}]}}}